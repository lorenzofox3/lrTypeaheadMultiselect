{"version":3,"sources":["lrTypeaheadMultiselect.min.js"],"names":["ng","undefined","module","controller","$q","isLoading","suggestions","suggestionInput","highlighted","proto","addValue","item","this","valueCollection","indexOf","push","removeValue","index","splice","pop","suggest","input","ctrl","resolve","suggester","then","sugg","filter","s","length","isHighlighted","highlightPrevious","highlightNext","Object","create","get","value","writable","directive","scope","bindToController","controllerAs","$timeout","require","link","element","attr","editing","bind","cancel","event","$apply","key","keyCode","preventDefault","angular"],"mappings":"CAAA,SAAWA,EAAIC,GACb,YACAD,GAAGE,OAAO,6BACPC,WAAW,mBAAoB,KAAM,SAAUC,GAC9C,GAAIC,IAAY,EACZC,KACAC,EAAkB,GAClBC,EAAc,KAEdC,GAKFC,SAAU,SAAUC,GAEyB,KAAvCC,KAAKC,gBAAgBC,QAAQH,KAC/BC,KAAKC,gBAAgBE,KAAKJ,GAC1BL,KACAC,EAAkB,GAClBC,EAAc,OAOlBQ,YAAa,SAAsBL,GACjC,GAAIM,GAAQL,KAAKC,gBAAgBC,QAAQH,EAC3B,MAAVM,EACFL,KAAKC,gBAAgBK,OAAOD,EAAO,GAEnCL,KAAKC,gBAAgBM,OAOzBC,QAAS,SAAkBC,GACzB,GAAIC,GAAOV,IACXL,GAAkBc,EAClBf,EAAce,EACZ,WACEhB,GAAY,EACZD,EAAGmB,QAAQD,EAAKE,UAAUH,IACvBI,KAAK,SAAUC,GACdpB,EAAcoB,EAAKC,OAAO,SAAUC,GAClC,MAA2C,KAApCN,EAAKT,gBAAgBC,QAAQc,KAEtCpB,EAAcF,EAAYuB,OAASvB,EAAY,GAAK,OALxDF,WAOW,WACPC,GAAY,WAQtByB,cAAe,SAAuBnB,GACpC,MAAOH,KAAgBG,GAKzBoB,kBAAmB,WACjB,GAAId,GAAQX,EAAYQ,QAAQN,EAChCA,GAAcS,GAAS,GAAKX,EAAYuB,OAASvB,EAAYW,EAAQ,GAAKT,GAK5EwB,cAAe,WACb,GAAIf,GAAQX,EAAYQ,QAAQN,EAChCA,GAAcS,GAAS,GAAKA,EAAQ,EAAIX,EAAYuB,OAASvB,EAAYW,EAAQ,GAAKT,GAI1F,OAAOyB,QAAOC,OAAOzB,GACnBJ,WACE8B,IAAK,WACH,MAAO9B,KAGXC,aACE6B,IAAK,WACH,MAAO7B,KAGXC,iBACE4B,IAAK,WACH,MAAO5B,KAGXM,iBACEuB,SACAC,UAAU,QAIfC,UAAU,cAAe,WACxB,OACEC,OAAO,EACPC,kBACE3B,gBAAiB,qBACjBW,UAAW,KAEbrB,WAAY,kBACZsC,aAAc,qBAGjBH,UAAU,qBAAsB,WAAY,SAAUI,GACrD,OACEC,QAAS,mBACTC,KAAM,SAAUL,EAAOM,EAASC,EAAMxB,GACpC,GAAIyB,GAAU,IACdF,GAAQG,KAAK,QAAS,WACJ,OAAZD,GACFL,EAASO,OAAOF,GAElBA,EAAUL,EAAS,WACjBpB,EAAKF,QAAQyB,EAAQ,GAAGT,OACxBW,EAAU,MACT,OAELF,EAAQG,KAAK,UAAW,SAAUE,GAChCX,EAAMY,OAAO,WACX,GAAIC,GAAMF,EAAMG,OACJ,MAARD,GAAc9B,EAAKhB,YAAY,IACjCgB,EAAKZ,SAASY,EAAKd,aACnBqC,EAAQ,GAAGT,MAAQ,GACnBc,EAAMI,kBACW,IAARF,GAAcP,EAAQ,GAAGT,MAEjB,KAARgB,EACT9B,EAAKU,gBACY,KAARoB,GACT9B,EAAKS,oBAJLT,EAAKN,wBAYlBuC","file":"lrTypeaheadMultiselect.min.js","sourcesContent":["(function (ng, undefined) {\n  'use strict';\n  ng.module('lrTypeaheadMultiSelect', [])\n    .controller('lrTypeaheadCtrl', ['$q', function ($q) {\n      var isLoading = false;\n      var suggestions = [];\n      var suggestionInput = '';\n      var highlighted = null;\n\n      var proto = {\n        /**\n         * add a value to the valueCollection\n         * @param item - the value to add\n         */\n        addValue: function (item) {\n          //only add new items\n          if (this.valueCollection.indexOf(item) === -1) {\n            this.valueCollection.push(item);\n            suggestions = [];\n            suggestionInput = '';\n            highlighted = null;\n          }\n        },\n        /**\n         * remove a value from the valueCollection (or remove the last item)\n         * @param item - the value to remove\n         */\n        removeValue: function removeValue (item) {\n          var index = this.valueCollection.indexOf(item);\n          if (index !== -1) {\n            this.valueCollection.splice(index, 1);\n          } else {\n            this.valueCollection.pop();\n          }\n        },\n        /**\n         * update suggestions based on the input\n         * @param input {String} - the suggestion input\n         */\n        suggest: function suggest (input) {\n          var ctrl = this;\n          suggestionInput = input;\n          suggestions = input ?\n            function () {\n              isLoading = true;\n              $q.resolve(ctrl.suggester(input))\n                .then(function (sugg) {\n                  suggestions = sugg.filter(function (s) {\n                    return ctrl.valueCollection.indexOf(s) === -1;\n                  });\n                  highlighted = suggestions.length ? suggestions[0] : null;\n                })\n                .finally(function () {\n                  isLoading = false;\n                })\n            }() : [];\n        },\n        /**\n         * tells whether a suggestion is currently highlighted\n         * @param item - the suggestion to verify\n         */\n        isHighlighted: function isHiglighted (item) {\n          return highlighted === item;\n        },\n        /**\n         * highlight the next suggestion in the suggestion list\n         */\n        highlightPrevious: function highlightPrevious () {\n          var index = suggestions.indexOf(highlighted);\n          highlighted = index >= 0 && suggestions.length ? suggestions[index - 1] : highlighted;\n        },\n        /**\n         * highlight the previous suggestion in the suggestion list\n         */\n        highlightNext: function highlightNext () {\n          var index = suggestions.indexOf(highlighted);\n          highlighted = index >= 0 && index + 1 < suggestions.length ? suggestions[index + 1] : highlighted;\n        }\n      };\n\n      return Object.create(proto, {\n        isLoading: {\n          get: function () {\n            return isLoading;\n          }\n        },\n        suggestions: {\n          get: function () {\n            return suggestions;\n          }\n        },\n        suggestionInput: {\n          get: function () {\n            return suggestionInput;\n          }\n        },\n        valueCollection: {\n          value: [],\n          writable: true\n        }\n      });\n    }])\n    .directive('lrTypeahead', function () {\n      return {\n        scope: true,\n        bindToController: {\n          valueCollection: '=crmMultiTypeahead',\n          suggester: '='\n        },\n        controller: 'lrTypeaheadCtrl',\n        controllerAs: 'lrTypeaheadCtrl'\n      }\n    })\n    .directive('lrSuggestionInput', ['$timeout', function ($timeout) {\n      return {\n        require: '^lrTypeaheadCtrl',\n        link: function (scope, element, attr, ctrl) {\n          var editing = null;\n          element.bind('input', function () {\n            if (editing !== null) {\n              $timeout.cancel(editing);\n            }\n            editing = $timeout(function () {\n              ctrl.suggest(element[0].value);\n              editing = null;\n            }, 200);\n          });\n          element.bind('keydown', function (event) {\n            scope.$apply(function () {\n              var key = event.keyCode;\n              if (key === 13 && ctrl.suggestions[0]) {\n                ctrl.addValue(ctrl.highlighted);\n                element[0].value = '';\n                event.preventDefault();\n              } else if (key === 8 && !element[0].value) {\n                ctrl.removeValue();\n              } else if (key === 40) {\n                ctrl.highlightNext();\n              } else if (key === 38) {\n                ctrl.highlightPrevious();\n              }\n            })\n          });\n        }\n      }\n    }]);\n\n})(angular);"],"sourceRoot":"/source/"}